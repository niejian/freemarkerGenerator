<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<context:annotation-config />
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="cn.com.bluemoon.web" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
     
     <!-- 最重要:::如果放在spring-context.xml中，这里的aop设置将不会生效 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 启用MVC注解 -->
	<mvc:annotation-driven />
     
     
    <!-- 地址拦截控制器 -->
  <!--  <mvc:interceptors> -->
	   		<!-- <mvc:mapping path=""/>
	   		<mvc:exclude-mapping path="/admin/main"/> -->
	   		<!-- 
	   		<bean id="authentication"
				class="cn.com.bluemoon.control.interceptor.AuthenticationInterceptor"> 
				<property name="tipsUrl" value="/view/index.jsp" /> 
			</bean>
			 -->
   <!--  </mvc:interceptors> -->
    
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes" >
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>
    
    <!-- 定义模板 -->
    <bean id="beetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration"
		init-method="init">
		<property name="root" value="/" />
	</bean>
	<bean id="viewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>

    <!-- 定义JSP文件的位置-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <!-- 使用模版语言后，这段注释掉。但是要在对应的Controller中写返回的路径及文件名 -->
      <!-- 
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".btl"/>
         -->
    </bean>

    <!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
    <mvc:default-servlet-handler/>

    <!-- 定义无Controller的path<->view直接映射-->
    <!-- <mvc:view-controller path="/" view-name="redirect:/main/index"/>
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
        <property name="defaultEncoding" value="UTF-8"/>
        one of the properties available; the maximum file size in bytes
        <property name="uploadTempDir" value="fileUpload/temp"></property>
    	<property name="maxUploadSize" value="104857600"/>  
    	<property name="maxInMemorySize" value="4096"/>  
	</bean> -->
	
	<!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
		<property name="exceptionMappings">  
			<props>
                <!--
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
                -->
				<prop key="java.lang.Throwable">error/500</prop>
            </props>  
		</property>  
    </bean>
    <!--Swagger 
    <bean class="com.bluemoon.control.util.MySwaggerConfig" /> 
	<bean id="logAspService" class="com.bluemoon.control.log.LogAspService"></bean> -->

</beans>
